[versions]
gradle = "8.0.0"

# Android Sdk
androidCompileSdk = "33"
androidMinSdk = "24"

# Plugins
androidCacheFix = "2.7.1"
androidGradle = "8.0.1"
androidJunit5 = "1.8.2.1"
benManes = "0.46.0"
composeCompiler = "1.4.4"
detekt = "1.22.0"
jacoco = "0.8.7"
kotlin = "1.8.22"
ksp = "1.8.10-1.0.9"
mavenPublish = "+"
molecule = "0.8.0"
playServices = "4.3.15"

# Libraries
accompanist = "0.30.1"
androidxAppcompat = "1.3.1"
androidxArchCoreTesting = "2.2.0"
androidxBiometric = "1.2.0-alpha05"
androidxBrowser = "1.5.0"
androidxCardview = "1.0.0"
androidxConstraintlayout = "2.1.4"
androidxCore = "1.10.1"
androidxFragment = "1.3.6"
androidxLifecycle = "2.6.1"
androidxNavigation = "2.6.0"
androidxPreference = "1.2.0"
androidxRoom = "2.5.1"
androidxTestCore = "1.5.0"
androidxTestEspresso = "3.5.1"
androidxTestJunit = "1.1.5"
androidxTestOrchestrator = "1.4.2"
androidxTestRules = "1.5.0"
androidxTestRunner = "1.5.2"
androidxTestUiAutomator = "2.2.0"
androidxVectorDrawable = "1.1.0"
arrow = "1.1.5"
bitcoinJ = "0.16.2"
chucker = "3.5.2"
coil = "2.3.0"
compose = "1.4.3"
composeActivity = "1.7.2"
composeConstraintLayout = "1.1.0-alpha10"
composeMaterial3 = "1.1.0"
composeShimmer = "1.0.5"
googleMaterial = "1.9.0"
immutableCollections = "0.3.5"
junit4 = "4.13.2"
junit5 = "5.9.2"
junitPioneer = "2.0.1"
kermit = "0.3.0-m1"
khash = "1.1.3"
kotlinxCoroutines = "1.6.4"
ktor = "2.2.4"
mockk = "1.13.5"
okhttp = "4.10.0"
okio = "3.3.0"
retrofit = "2.9.0"
robolectric = "4.10.2"
serialization = "1.5.0"
timber = "5.0.1"
timberJunitRule = "1.0.1"
turbine = "0.12.3"

[libraries]
accompanistNavigationAnimation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanistNavigationMaterial = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "accompanist" }
accompanistPermissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
accompanistSwipeRefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }
accompanistSystemUiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanistThemeAdapterMaterial = { module = "com.google.accompanist:accompanist-themeadapter-material", version.ref = "accompanist" }
accompanistWebView = { module = "com.google.accompanist:accompanist-webview", version.ref = "accompanist" }
androidxBiometric = { module = "androidx.biometric:biometric-ktx", version.ref = "androidxBiometric" }
androidxBrowser = { module = "androidx.browser:browser", version.ref = "androidxBrowser" }
androidxCore = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidxDataStore = { module = "androidx.datastore:datastore-preferences", version = "1.0.0" }
androidxPreference = { module = "androidx.preference:preference", version.ref = "androidxPreference" }
androidxSecurityCrypto = { module = "androidx.security:security-crypto", version = "1.0.0" }
androidxSplashscreen = { module = "androidx.core:core-splashscreen", version = "1.0.1" }
animatedVectorDrawable = { module = "androidx.vectordrawable:vectordrawable-animated", version.ref = "androidxVectorDrawable" }
arrowCore = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrowStack = { module = "io.arrow-kt:arrow-stack", version.ref = "arrow" }
bitcoinJ = { module = "org.bitcoinj:bitcoinj-core", version.ref = "bitcoinJ" }
chucker = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
chuckerNoOp = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
composeActivity = { module = "androidx.activity:activity-compose", version.ref = "composeActivity" }
composeAnimation = { module = "androidx.compose.animation:animation", version.ref = "compose" }
composeConstraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "composeConstraintLayout" }
composeLintChecks = { module = "com.slack.lint.compose:compose-lint-checks", version = "1.2.0" }
composeLiveData = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
composeMaterial3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
composeShimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "composeShimmer" }
composeTextGoogleFonts = { module = "androidx.compose.ui:ui-text-google-fonts", version.ref = "compose" }
composeUiTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
composeViewBinding = { module = "androidx.compose.ui:ui-viewbinding", version.ref = "compose" }
coreLibraryDesugaring = { module = "com.android.tools:desugar_jdk_libs", version = "2.0.3" }
coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
coroutinesJdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinxCoroutines" }
immutableCollections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutableCollections" }
jwtDecode = { module = "com.auth0.android:jwtdecode", version = "2.0.2" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
ktorClientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorClientDarwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktorClientOkHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktorSerializationKotlinxJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktorUtils = { module = "io.ktor:ktor-utils", version.ref = "ktor" }
khashSha256 = { module = "com.github.komputing.khash:sha256", version.ref = "khash" }
lifecycleCommon = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "androidxLifecycle" }
lifecycleLiveData = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
lifecycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidxLifecycle" }
lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
lifecycleRuntimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
lifecycleViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
material = { module = "com.google.android.material:material", version.ref = "googleMaterial" }
navigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigation" }
navigationFragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidxNavigation" }
navigationUi = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidxNavigation" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
room = { module = "androidx.room:room-runtime", version.ref = "androidxRoom" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "androidxRoom" }
roomPaging = { module = "androidx.room:room-paging", version.ref = "androidxRoom" }
roomTesting = { module = "androidx.room:room-testing", version.ref = "androidxRoom" }
serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
serializationProtobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "serialization" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
vectorDrawable = { module = "androidx.vectordrawable:vectordrawable", version.ref = "androidxVectorDrawable" }

# Test Libs
androidXNavigationTesting = { module = "androidx.navigation:navigation-testing", version.ref = "androidxNavigation" }
androidXTestCore = { module = "androidx.test:core", version.ref = "androidxTestCore" }
androidXTestJunit = { module = "androidx.test.ext:junit", version.ref = "androidxTestJunit" }
androidXTestJunitKtx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxTestJunit" }
androidXTestOrchestrator = { module = "androidx.test:orchestrator", version.ref = "androidxTestOrchestrator" }
androidXTestRules = { module = "androidx.test:rules", version.ref = "androidxTestRules" }
androidXTestRunner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
archCoreTesting = { module = "androidx.arch.core:core-testing", version.ref = "androidxArchCoreTesting" }
composeUiTest = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
composeUiTestManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
espressoContrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "androidxTestEspresso" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxTestEspresso" }
espressoIntents = { module = "androidx.test.espresso:espresso-intents", version.ref = "androidxTestEspresso" }
espressoWeb = { module = "androidx.test.espresso:espresso-web", version.ref = "androidxTestEspresso" }
junit4 = { module = "junit:junit", version.ref = "junit4" }
junit5Engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
junit5Params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit5" }
junit5api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5" }
junitPioneer = { module = "org.junit-pioneer:junit-pioneer", version.ref = "junitPioneer" }
junitVintage = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit5" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
okhttpMockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
timberJunitRule = { module = "net.lachlanmckee:timber-junit-rule", version.ref = "timberJunitRule" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
uiAutomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidxTestUiAutomator" }

[plugins]
androidApp = { id = "com.android.application", version.ref = "androidGradle" }
androidCacheFix = { id = "org.gradle.android.cache-fix", version.ref = "androidCacheFix" }
androidJunit5 = { id = "de.mannodermaus.android-junit5", version.ref = "androidJunit5" }
androidLib = { id = "com.android.library", version.ref = "androidGradle" }
detekt = { id = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detektFormatting = { id = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinAllOpen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
mavenPublish = { id = "com.vanniktech.maven.publish", version.ref = "mavenPublish" }
molecule = { id = "app.cash.molecule", version.ref = "molecule" }
versionsPg = { id = "com.github.ben-manes.versions", version.ref = "benManes" }

[bundles]
compose = [
  "composeActivity",
  "composeAnimation",
  "composeConstraintLayout",
  "composeLiveData",
  "composeMaterial3",
  "composeTextGoogleFonts",
  "composeUiTooling",
  "composeViewBinding",
  "immutableCollections",
  "lifecycleRuntimeCompose",
]
androidLifecycle = [
  "lifecycleCommon",
  "lifecycleLiveData",
  "lifecycleProcess",
  "lifecycleRuntime",
  "lifecycleViewModel",
]
